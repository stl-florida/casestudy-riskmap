{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","routes/riskmap/riskmap.js","app.less","resources/styles/themeGuide.less","routes/riskmap/riskmap.less"],"names":["App","configureRouter","config","router","title","options","pushState","root","map","route","name","moduleId","mapUnknownRoutes","redirect","attached","self","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","RiskMap","EventAggregator","ea","layers","flood","id","type","source","url","paint","stormsurge","groundwater","activate","param","risk","addLayerToMap","layer","addLayer","layout","visibility","accessToken","Map","attributionControl","container","center","zoom","style","hash","addControl","NavigationControl","on","group","console","log","detached","layer_key","flood_key","getLayer","removeLayer","removeSource"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    config.title = 'RiskMap';\n    config.options.pushState = true;\n    config.options.root = '/';\n    config.map([\n      {route: ':risk',   name: 'map',  moduleId: 'routes/riskmap/riskmap'}/*,\n      {route: 'stormsurge',   name: 'stormsurge',  moduleId: 'routes/storm/storm'},\n      {route: 'flood',   name: 'flood',  moduleId: 'routes/flood/flood'},\n      {route: 'groundwater',   name: 'groundwater',  moduleId: 'routes/gw/gw'}*/\n    ]);\n    config.mapUnknownRoutes({redirect: 'map'});\n    this.router = router;\n  }\n\n  attached() {\n    var self = this;\n\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import mapboxgl from 'mapbox-gl';\n\nexport class RiskMap {\n\n  constructor(EventAggregator) {\n    this.ea = EventAggregator;\n\n    this.layers = {\n      flood: [\n        {\n          id: \"FLDHVE\",\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.b0mn3fbb',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": \"#fccf23\",\n            \"fill-opacity\": 0.9\n          }\n        },\n        {\n          id: 'FLDHAO',\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.1eqmjn9o',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": \"#fc610b\",\n            \"fill-opacity\": 0.8\n          }\n        },\n        {\n          id: 'FLDHAE',\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.4cou1y2j',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": \"#c44d3f\",\n            \"fill-opacity\": 0.7\n          }\n        },\n        {\n          id: 'FLDHAH',\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.758t0cbw',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": \"#6576a5\",\n            \"fill-opacity\": 0.5\n          }\n        },\n        {\n          id: 'FLDHX',\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.44qg0o2f',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": \"#368bd8\",\n            \"fill-opacity\": 0.25\n          }\n        }\n      ],\n      stormsurge: [{\n        id: 'stormsurge',\n        type: 'fill',\n        source: {\n          url: 'mapbox://asbarve.41947bz4',\n          type: 'vector'\n        },\n        paint: {\n          \"fill-color\": {\n            \"property\": \"CAT\",\n            \"type\": \"categorical\",\n            \"stops\": [\n              [\n                \"1\",\n                \"#c1272d\"\n              ],\n              [\n                \"2\",\n                \"#cd5257\"\n              ],\n              [\n                \"3\",\n                \"#d97d81\"\n              ],\n              [\n                \"4\",\n                \"#e6a8ab\"\n              ],\n              [\n                \"5\",\n                \"#f2d3d5\"\n              ]\n            ]\n          },\n          \"fill-opacity\": {\n            \"property\": \"CAT\",\n            \"type\": \"categorical\",\n            \"stops\": [\n              [\n                \"1\",\n                0.7\n              ],\n              [\n                \"2\",\n                0.6\n              ],\n              [\n                \"3\",\n                0.5\n              ],\n              [\n                \"4\",\n                0.4\n              ],\n              [\n                \"5\",\n                0.3\n              ]\n            ]\n          }\n        }\n      }],\n      groundwater: [\n        {\n          id: 'groundwater',\n          type: 'fill',\n          source: {\n            url: 'mapbox://asbarve.5wvk9kun',\n            type: 'vector'\n          },\n          paint: {\n            \"fill-color\": '#ff0000'\n          }\n        },\n        {\n          id: 'salt_water',\n          type: 'line',\n          source: {\n            url: 'mapbox://asbarve.87xhq483',\n            type: 'vector'\n          },\n          paint: {\n            'line-color': '#f05022',\n            'line-width': 3\n          }\n        }\n      ]\n    };\n  }\n\n  activate(param) {\n    this.risk = param.risk;\n  }\n\n  addLayerToMap(layer) {\n    var self = this;\n    return self.map.addLayer({\n      id: layer.id,\n      type: layer.type,\n      source: layer.source,\n      \"source-layer\": layer.id,\n      layout: {\n        visibility: 'visible'\n      },\n      paint: layer.paint\n    });\n  }\n\n\n  attached() {\n    var self = this;\n\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYXNiYXJ2ZSIsImEiOiJjajVvOGdpcmwzejNiMzJvODF2dGFqYWcxIn0.rAJZcytC7dbajv0wzWo8Kw';\n    self.map = new mapboxgl.Map({\n      attributionControl: false,\n      container: 'mapContainer',\n      center: [-80.25, 26.15],\n      zoom: 11,\n      style: 'mapbox://styles/mapbox/light-v9',\n      hash: false\n    });\n\n    self.map.addControl(new mapboxgl.NavigationControl({\n      // TODO: position NOT top-right\n    }));\n\n    self.map.on('load', () => {\n      for (let group in self.layers) {\n        console.log('checking group: ' + group);\n        if (group === self.risk) {\n          console.log('group ' + group + ' is active');\n          for (let layer of self.layers[group]) {\n            console.log(layer.id);\n            self.addLayerToMap(layer);\n          }\n        }\n      }\n    });\n  }\n\n  detached() {\n    var self = this;\n    for (let layer_key in self.layers) {\n      if (layer_key === 'flood') {\n        for (let flood_key in self.layers.flood) {\n          var id = self.layers.flood[flood_key].id;\n          if (self.map.getLayer(id)) {\n            self.map.removeLayer(id);\n            self.map.removeSource(id);\n          }\n        }\n      } else {\n        if (self.map.getLayer(self.layers[layer_key].id)) {\n          self.map.removeLayer(self.layers[layer_key].id);\n          self.map.removeSource(self.layers[layer_key].id);\n        }\n      }\n    }\n  }\n}\n","html, body {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\n","","@import \"styles/themeGuide.less\";\n\n#mapContainer {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\n"],"sourceRoot":".."}